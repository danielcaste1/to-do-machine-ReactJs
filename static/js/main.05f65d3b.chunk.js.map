{"version":3,"sources":["Components/App/useToDos.js","Hooks/useLocalStorage.jsx","Components/ToDoHeader/index.js","Components/ToDoTitle/index.js","Components/ToDoCounter/index.js","Components/ToDoSearch/index.js","Components/ToDoLoad/index.js","Components/ToDoList/index.js","Components/ToDoItem/index.js","Components/ToDoAddButton/index.js","Components/Modal/index.js","Components/ModalCard/index.js","Components/ToDoError/index.js","Components/EmptyToDos/index.js","Components/EmptySearchResults/index.js","Components/AddContactCard/index.js","Components/ChangeAlert/withStorageListener.js","Components/ChangeAlert/index.js","Components/ChangeAlertCard/index.js","Components/App/index.jsx","index.js"],"names":["useToDos","_React$useState","React","useState","_React$useState2","Object","slicedToArray","searchValue","setSearchValue","_useLocalStorage","itemName","initialValue","item","setItem","_React$useState3","_React$useState4","sincronizedItem","setSincronizedItem","_React$useState5","_React$useState6","loading","setLoading","_React$useState7","_React$useState8","error","setError","useEffect","setTimeout","parsedItem","storagedItem","localStorage","getItem","JSON","parse","_unused","stringify","saveItem","newItem","stringifiedItem","console","log","sincronizeItem","useLocalStorage","ToDos","setToDos","sincronizeToDos","completedToDos","filter","todo","completed","filteredToDos","length","todoText","text","toUpperCase","searchText","includes","_useState","_useState2","newTodo","setNewTodo","taskLeft","document","title","concat","updateDocTitle","_useState3","_useState4","openModal","setOpenModal","toggleModal","_useState5","_useState6","showingModal","setShowingModal","appTitle","searchChanged","event","target","value","toggleTodo","key","newToDos","map","addNewTodo","toConsumableArray","deleteTodo","reduce","arr","push","ToDoHeader","_ref","children","react_default","a","createElement","Children","toArray","child","cloneElement","ToDoTitle","className","ToDoCounter","ToDoSearch","type","placeholder","onChange","disabled","ToDoLoad","ToDoList","props","renderFunc","render","onError","sincronize","onLoad","onEmptyToDos","onEmptySearchResults","ToDoItem","data_key","onClick","ToDoAddButton","Modal","ReactDOM","createPortal","querySelector","ModalCard","ToDoError","EmptyToDos","EmptySearchResults","AddContactCard","react","withStorageListener","WrappedComponent","storageChange","setStorageChange","window","addEventListener","change","assign","show","toggleShow","ChangeAlertWithStorageListener","ChangeAlertCardWithStorageListener","App","_useToDos","Fragment","ToDoTitle_ToDoTitle","ToDoCounter_ToDoCounter","ToDoSearch_ToDoSearch","ToDoList_ToDoList","ToDoItem_ToDoItem","indexOf","ToDoAddButton_ToDoAddButton","Modal_Modal","createRoot","getElementById","StrictMode","Components_App"],"mappings":"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","file":"static/js/main.05f65d3b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocalStorage } from \"../../Hooks/useLocalStorage\";\n\nfunction useToDos() {\n  const appTitle = \"To-Do List\";\n\n  const [searchValue, setSearchValue] = React.useState(\"\");\n\n  const searchChanged = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  const {\n    item: ToDos,\n    saveItem: setToDos,\n    sincronizeItem : sincronizeToDos,\n    loading,\n    error,\n  } = useLocalStorage(\"toDoList\", []);\n\n  const completedToDos = ToDos.filter((todo) => todo.completed);\n\n  let filteredToDos = [];\n\n  if (!(searchValue.length >= 1)) {\n    filteredToDos = ToDos;\n  } else {\n    filteredToDos = ToDos.filter((todo) => {\n      const todoText = todo.text.toUpperCase();\n      const searchText = searchValue.toUpperCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  const toggleTodo = (key) => {\n    const newToDos = ToDos.map((todo) => {\n      if (ToDos[key] === todo) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setToDos(newToDos);\n  };\n\n  const deleteTodo = (key) => {\n    const newToDos = ToDos.reduce((arr, todo) => {\n      if (!(ToDos[key] === todo)) {\n        arr.push(todo);\n      }\n      return arr;\n    }, []);\n    setToDos(newToDos);\n  };\n\n  const addNewTodo = () => {\n    const newToDos = [{ text: newTodo, completed: false }, ...ToDos];\n    setToDos(newToDos);\n    setNewTodo(\"\");\n    toggleModal();\n  };\n\n   const updateDocTitle = () => {\n    if (!ToDos.length) {\n      document.title = `To-Do List`;\n    } else {\n      const taskLeft = ToDos.length - completedToDos.length;\n      if (!taskLeft) {\n        document.title = `Everything done!`;\n      } else {\n        document.title = `${ToDos.length - completedToDos.length} task left`;\n      }\n    }\n  };\n\n  useEffect(() => {\n    updateDocTitle();\n  }, [ToDos]);\n\n  const [openModal, setOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setOpenModal(!openModal);\n  };\n\n  const [showingModal, setShowingModal] = useState(null);\n\n  return {\n    appTitle,\n    completedToDos,\n    ToDos,\n    sincronizeToDos,\n    loading,\n    error,\n    searchValue,\n    setSearchValue,\n    searchChanged,\n    filteredToDos,\n    toggleTodo,\n    newTodo,\n    setNewTodo,\n    addNewTodo,\n    deleteTodo,\n    openModal,\n    toggleModal,\n    showingModal,\n    setShowingModal,\n  };\n}\n\nexport { useToDos };\n","import React from \"react\";\n\nfunction useLocalStorage(itemName, initialValue) {\n  const [item, setItem] = React.useState(initialValue);\n  const [sincronizedItem, setSincronizedItem] = React.useState(true);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(false);\n\n  React.useEffect(() => {\n    try {\n      setTimeout(() => {\n        const storagedItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!storagedItem) {\n          parsedItem = [];\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n        } else {\n          try {\n            parsedItem = JSON.parse(storagedItem);\n          } catch {\n            parsedItem = [];\n          }\n        }\n        setItem(parsedItem);\n        setLoading(false);\n        setSincronizedItem(true);\n      }, 1000);\n    } catch (error) {\n      setLoading(false);\n      setError(true);\n    }\n  }, [sincronizedItem]);\n\n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      console.log(error);\n      setError(true);\n    }\n  };\n\n  const sincronizeItem = ()=>{\n    setLoading(true);\n    setSincronizedItem(false);\n  }\n\n  return { item, saveItem, sincronizeItem, loading, error };\n}\n\nexport { useLocalStorage };\n","import React from \"react\";\n\nfunction ToDoHeader({loading, children}) {\n  return (\n    <header>\n        { React.Children\n          .toArray(children).map(child => React.cloneElement(child, { loading: loading }))}\n    </header>\n  );\n}\n\nexport { ToDoHeader }","import React, {} from \"react\";\nimport \"./ToDoTitle.css\"\n\n\nfunction ToDoTitle ({appTitle}){\n    return(\n        <h1 className=\"app-title\">\n            {appTitle}\n        </h1>\n    )\n}\n\nexport { ToDoTitle };","import React from \"react\";\nimport \"./ToDoCounter.css\";\n\nfunction ToDoCounter({ loading, ToDos, completedToDos }) {\n    \n  return (\n    <div className=\"to-do__counter\">\n      {loading && (<span>Loading...</span>)}\n      {!loading && (<span>You've done {completedToDos.length} tasks of {ToDos.length}</span>)}\n    </div>\n  );\n}\n\nexport { ToDoCounter };\n","import React from \"react\";\nimport \"./ToDoSearch.css\";\n\nfunction ToDoSearch({ loading, searchValue, searchChanged }) {\n  return (\n    <div className=\"search-section\">\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        value={searchValue}\n        onChange={searchChanged}\n        disabled = {loading}\n      />\n    </div>\n  );\n}\nexport { ToDoSearch };\n","import React from \"react\";\n\nfunction ToDoLoad() {\n  return (\n    <p className=\"loading\">\n      <i className=\"fa-solid fa-circle-notch\"></i>\n    </p>\n  );\n}\n\nexport { ToDoLoad }","import React from \"react\";\nimport \"./ToDoList.css\"\n\n\n\nfunction ToDoList (props){\n\n    const renderFunc = props.children || props.render;\n\n    return(\n        \n        <div className=\"to-do-list\">\n            <h3 className=\"to-do-list__title\">Your tasks</h3>\n            \n            {\n                //if error\n                !!props.error && props.onError()\n            }\n            {\n                //if loading or no sincronized\n                (!!props.loading || !props.sincronize) && props.onLoad()\n            }\n            {\n                //if not loading, no filtered To Dos, no Search Value\n                (!props.loading && !props.filteredToDos.length && !props.searchValue.length)  && props.onEmptyToDos()\n            }\n            {\n                //if not loading, not filtered To Dos, but with some Search Value\n                (!props.loading && !props.filteredToDos.length && !!props.searchValue.length) && props.onEmptySearchResults()\n            }\n            {\n                //if not loading, neither sincronizing then show filtered ToDos\n                (!props.loading && props.sincronize) && props.filteredToDos.map(renderFunc)\n            }\n        </div>\n    )\n}\n\nexport { ToDoList };","import React from \"react\";\nimport \"./ToDoItem.css\";\n\nfunction ToDoItem({ text, completed, data_key, toggleTodo, deleteTodo }) {\n  const checkChange = () => {\n    toggleTodo(data_key);\n  };\n  return (\n    <div className={`${completed ? \"completed\" : \"\"} to-do-item`}>\n      <span\n          className= \"item--complete-button\"\n          onClick={() => {\n            checkChange();\n          }}\n        >\n          <i \n          className=\"fa-solid fa-check\"\n          ></i>\n        </span>\n      <p>{text}</p>\n      <span\n        className=\"item--delete-button\"\n        onClick={() => {\n          deleteTodo(data_key);\n        }}\n      >\n        <i className=\"fa-solid fa-trash\"></i>\n      </span>\n    </div>\n  );\n}\n\nexport { ToDoItem };\n","import React from \"react\";\nimport \"./ToDoAddButton.css\";\n\nfunction ToDoAddButton({ openModal, toggleModal, setShowingModal }) {\n  return (\n    <div className={`add-task`}>\n      <button\n        type=\"button\"\n        className={`add-task__button ${openModal ? \"opened\" : \"\"}`}\n        onClick={() => {\n          toggleModal();\n          setShowingModal(\"addToDo\");\n        }}\n      >\n        +\n      </button>\n    </div>\n  );\n}\n\nexport { ToDoAddButton };\n","import ReactDOM from 'react-dom';\nimport \"./index.css\";\n\nfunction Modal ({openModal, children}){\n    if(!!openModal){\n        return ReactDOM.createPortal(\n            children,\n            document.querySelector(\"#modal\")\n        )\n    }else{\n        return null\n    }\n}\n\nexport { Modal }","import React from \"react\";\nfunction ModalCard({ children }) {\n  return (\n    <div className=\"modal__background\">\n      <div className=\"modal__card\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport { ModalCard };","import React from \"react\";\n\nfunction ToDoError() {\n  return (\n    <p className=\"error\">Oops! Something wrong just ocurred </p>\n  );\n}\n\nexport { ToDoError }","import React from \"react\";\n\nfunction EmptyToDos() {\n  return (\n    <p>Add your first task with the + icon</p>\n  );\n}\n\nexport { EmptyToDos }","import React from \"react\";\n\nfunction EmptySearchResults({searchValue}){\n    return (\n        <p className=\"xdds\"> No results found for { searchValue } </p>\n    )\n}\n\nexport { EmptySearchResults }","import React, { Fragment } from \"react\";\n\nfunction AddContactCard({newTodo, setNewTodo, addNewTodo, toggleModal}) {\n  \n  return (\n    <Fragment>\n      <p className=\"card__title\">Set a new task!</p>\n      <input\n        value={newTodo}\n        type=\"text\"\n        className=\"card__input\"\n        onChange={(event) => {\n          setNewTodo(event.target.value);\n        }}\n      ></input>\n\n      <div className=\"card__footer\">\n        <button\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          onClick={toggleModal}\n        >\n          Cancel\n        </button>\n\n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          onClick={() => {\n            addNewTodo(newTodo);\n          }}\n        >\n          Add\n        </button>\n      </div>\n    </Fragment>\n  );\n}\n\nexport { AddContactCard };\n","import React, { useState } from \"react\";\nfunction withStorageListener(WrappedComponent){\n    \n    \n    return function WrappedComponentWithStorageListener(props) {\n        const [storageChange, setStorageChange] = useState(false);\n\n        //listens for changes in localStorage, the argument of the next function passes the changes as argument.\n        window.addEventListener('storage', (change)=> {\n            //If the key that changed is toDoList\n            if(change.key === 'toDoList'){\n                setStorageChange(change);\n                props.toggleModal();\n                props.setShowingModal(\"changeAlert\");\n            }\n        })\n        \n        const toggleShow = ()=>{\n            setStorageChange(false);\n            props.sincronizeToDos();\n            props.toggleModal();\n        }\n\n        return (\n            <WrappedComponent\n                {...props}\n                show = { storageChange }\n                toggleShow = { toggleShow }\n            />\n        )\n    }\n}\n\nexport { withStorageListener }","import React from \"react\";\nimport { withStorageListener } from \"./withStorageListener\";\n\nfunction ChangeAlert({ show, toggleShow }) {\n  return null;\n}\n\nconst ChangeAlertWithStorageListener = withStorageListener(ChangeAlert);\n\nexport { ChangeAlertWithStorageListener };\n","import React, { Fragment } from \"react\";\nimport { withStorageListener } from \"../ChangeAlert/withStorageListener\";\n\nfunction ChangeAlertCard({ toggleShow }) {\n  return (\n    <Fragment>\n      <p className=\"card__info\">\n        Hmmm... It looks like your To Do List changed recently, would you like\n        to refresh your list to get the last changes?\n      </p>\n      <div className=\"card__footer\">\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => {\n            toggleShow();\n          }}\n        >\n          Refresh\n        </button>\n      </div>\n    </Fragment>\n  );\n}\n\nconst ChangeAlertCardWithStorageListener = withStorageListener(ChangeAlertCard);\n\nexport { ChangeAlertCardWithStorageListener };\n","import React from \"react\";\nimport { useToDos } from \"./useToDos\";\nimport { ToDoHeader } from \"../ToDoHeader\";\nimport { ToDoTitle } from \"../ToDoTitle\";\nimport { ToDoCounter } from \"../ToDoCounter\";\nimport { ToDoSearch } from \"../ToDoSearch\";\nimport { ToDoLoad } from \"../ToDoLoad\";\nimport { ToDoList } from \"../ToDoList\";\nimport { ToDoItem } from \"../ToDoItem\";\nimport { ToDoAddButton } from \"../ToDoAddButton\";\nimport { Modal } from \"../Modal\";\nimport { ModalCard } from \"../ModalCard\";\nimport { ToDoError } from \"../ToDoError\";\nimport { EmptyToDos } from \"../EmptyToDos\";\nimport { EmptySearchResults } from \"../EmptySearchResults\";\nimport { AddContactCard } from \"../AddContactCard\";\nimport { ChangeAlertWithStorageListener } from \"../ChangeAlert\";\nimport { ChangeAlertCardWithStorageListener } from \"../ChangeAlertCard\";\n\nfunction App() {\n  const {\n    appTitle,\n    completedToDos,\n    ToDos,\n    sincronizeToDos,\n    loading,\n    searchValue,\n    searchChanged,\n    filteredToDos,\n    error,\n    toggleTodo,\n    deleteTodo,\n    newTodo,\n    setNewTodo,\n    addNewTodo,\n    openModal,\n    toggleModal,\n    showingModal,\n    setShowingModal,\n  } = useToDos();\n  return (\n    <React.Fragment>\n      <ToDoTitle appTitle={appTitle}></ToDoTitle>\n\n      <ToDoHeader loading={loading}>\n        <ToDoCounter\n          completedToDos={completedToDos}\n          ToDos={ToDos}\n        ></ToDoCounter>\n\n        <ToDoSearch\n          searchValue={searchValue}\n          searchChanged={searchChanged}\n        ></ToDoSearch>\n      </ToDoHeader>\n\n      <ToDoList\n        error={error}\n        onError={() => <ToDoError />}\n        loading={loading}\n        sincronize={sincronizeToDos}\n        onLoad={() => <ToDoLoad />}\n        filteredToDos={filteredToDos}\n        onEmptyToDos={() => <EmptyToDos />}\n        searchValue={searchValue}\n        onEmptySearchResults={() => (\n          <EmptySearchResults searchValue={searchValue} />\n        )}\n        /**\n      La función render puede ser pasada cómo una propiedad en especifica o como prop.children\n        render={(item) => (\n          <ToDoItem\n            key={filteredToDos.indexOf(item)}\n            text={item.text}\n            completed={item.completed}\n            data_key={filteredToDos.indexOf(item)}\n            toggleTodo={toggleTodo}\n            deleteTodo={deleteTodo}\n          />\n        )} \n        */\n      >\n        {(item) => (\n          <ToDoItem\n            key={filteredToDos.indexOf(item)}\n            text={item.text}\n            completed={item.completed}\n            data_key={filteredToDos.indexOf(item)}\n            toggleTodo={toggleTodo}\n            deleteTodo={deleteTodo}\n          />\n        )}\n      </ToDoList>\n\n      <ToDoAddButton\n        openModal={openModal}\n        toggleModal={toggleModal}\n        setShowingModal={setShowingModal}\n      ></ToDoAddButton>\n\n      <Modal openModal={openModal}>\n        <ModalCard>\n          {showingModal === \"addToDo\" && \n            <AddContactCard \n            newTodo={newTodo}\n            setNewTodo={setNewTodo}\n            addNewTodo={addNewTodo}\n            toggleModal={toggleModal}\n            />\n          }  \n          {showingModal === \"changeAlert\" && \n            <ChangeAlertCardWithStorageListener \n              toggleModal={toggleModal}\n              sincronizeToDos={sincronizeToDos}\n              setShowingModal={setShowingModal}\n            />\n          }  \n        </ModalCard>\n      </Modal>\n\n      <ChangeAlertWithStorageListener\n        toggleModal={toggleModal}\n        sincronizeToDos={sincronizeToDos}\n        setShowingModal={setShowingModal}\n      />\n    </React.Fragment>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './Components/App';\nimport './index.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);"],"sourceRoot":""}